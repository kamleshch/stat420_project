m = []
2+2
x = seq(from = 1, to = 10, by = 2)
x[1:3]
x[c(1,2,3)]
x[c(1,3,5)]
?all
?identical
?any
?all.equal?
install,packages("rmarkdown")
install.packages("rmarkdown")
?MASS::cats
knitr::opts_chunk$set(echo = TRUE)
cat_model = lm(Hwt~Bwt, data=MASS::cats)
summary(cat_model)
?pf
?swiss
swiss
new_data = data.frame(Agriculture = 54, Examination = 23, Education = 13, Catholic = 60, Infant.Mortality = 24)
new_data
?predict
?confint
names(summary)
swiss_model = lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss)
names(swiss_model)
names(summary(swiss_model))
summary(swiss_model)$fstatistic
set.seed(42)
x_values = data.frame(
x1 = runif(15),
x2 = runif(15),
x3 = runif(15)
)
X = cbind(x_values$x1, x_values$x2, x_values$x3)
X
X = cbind(rep(1,times=15), x_values$x1, x_values$x2, x_values$x3)
X
C = solve(t(X) %*% X)
C
C[0,0]
C[1,1]
swiss_model = lm(Fertility ~ Agriculture + Examination + Education + Catholic + Infant.Mortality, data = swiss)
null_model = lm(Fertility ~ 1, data = swiss)
anova(null_model, swiss_model)
names(anova(null_model, swiss_model))
anova(null_model, swiss_model)$Pr(>F)
anova(null_model, swiss_model)[2,"Pr(>F)"]
x = 1:100
?mod
x[x %% 2 == 0]
x[1:100 %% 2 == 0]
x = rep(5, 100)
x[1:100 %% 2 == 0]
x[1:100 %% 2 == 0] - 10
x = x[1:100 %% 2 == 0] - 10
x
x = rep(5, 100)
x[1:100 %% 2 == 0] = x[1:100 %% 2 == 0] - 10
x[1:100 %% 2 == 1] = x[1:100 %% 2 == 1] - 5
?MASS
?MASS::Melanoma
MASS::Melanoma$status == 2
MASS::Melanoma[MASS::Melanoma$status == 2]
MASS::Melanoma[MASS::Melanoma$status == 2, ]
MASS::Melanoma[MASS::Melanoma$status == 2, age]
MASS::Melanoma[MASS::Melanoma$status == 2, c('age')]
mean(MASS::Melanoma[MASS::Melanoma$status == 2, c('age')])
?airquality
airquality[airquality$Month==5, ]
airquality[airquality$Month==5, c('Wind')]
mean(airquality[airquality$Month==5, c('Wind')])
airquality[which(airquality$Month==5)]
airquality[which(airquality$Month==5), ]
1:30
(1:30)^2
?faithful
faithful_model = lm(eruptions ~ waiting, data = faithful)
summary(faithful_model)
names(summary(faithful_model))
summary(faithful_model)$coefficients
data.frame('waiting':80)
data.frame('waiting'=80)
data.frame('waiting'=c(80))
?predict
load("~/MSc_DataScience/STAT420/Project/writeup/.RData")
summary(add_model)
back_model = step(add_model, direction = "backward", trace = 0)
summary(back_model)
setwd("~/MSc_DataScience/STAT420/Project/writeup")
summary(cat_model)
fitted.values(cat_model)
names(cat_model)
cat_model$model
